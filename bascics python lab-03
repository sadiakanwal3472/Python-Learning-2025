{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "27b114b5-a482-4d1f-b808-44bf867c6108",
   "metadata": {},
   "source": [
    "# List in python"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "9a33333d-585e-4c6a-8366-223df158c2e2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "application\n"
     ]
    }
   ],
   "source": [
    "a=\"applica\"\n",
    "b=\"tion\"\n",
    "z=a+b\n",
    "print(z)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "9548efb1-2217-466b-8c8f-e1c57cc059fd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'a'"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "z[6]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "7911f583-cadd-4db3-97f4-ca893beb46aa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "list"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mylist=[1,2,3,4,5,6]\n",
    "type(mylist)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "91ba8911-c43d-41ec-902f-d9e952f989f0",
   "metadata": {},
   "outputs": [],
   "source": [
    "thislist=[\"apple\",\"banana\",\"orange\",\"peach\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "209d8876-8f2f-4aef-bd34-0c2e6f36f10c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'apple'"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    " # indexing returns the item\n",
    "thislist[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "35800036-7c0b-4459-95dd-a7d1d171a897",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'peach'"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "thislist[-1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "7846dc9e-5852-4628-949c-84c033d4d94d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'orange'"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "thislist[2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "913a33b3-a046-4c78-a29e-eb1ed94c4c61",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[4, 5, 6]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# slicing returns a new list\n",
    "mylist[3:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "60a9f057-4332-47bc-b3bc-6b5bafa870ce",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1, 2, 3]"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mylist[:3]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bd76c923-28ee-4e23-adcd-ff72b07f80ce",
   "metadata": {},
   "source": [
    "Lists also support operations like concatenation:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "59fbe15b-0754-4959-a5ea-4cb33ed06c9d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1, 2, 3, 4, 5, 6, 'apple', 'banana', 'orange', 'peach']\n"
     ]
    }
   ],
   "source": [
    "newlist=mylist+thislist\n",
    "print(newlist)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "fd2fc923-0e52-4525-8810-b4c0a8938221",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1, 2, 3, 4, 5, 6]\n"
     ]
    }
   ],
   "source": [
    "numberlist=newlist[:6]\n",
    "print(numberlist)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "79e91830-60f0-4379-855b-35c6211808e5",
   "metadata": {},
   "outputs": [],
   "source": [
    "fruitlist=newlist[6:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "311d7f9b-36c7-42e4-917e-d82a0fae0e22",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['apple', 'banana', 'orange', 'peach']\n"
     ]
    }
   ],
   "source": [
    "print(fruitlist)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "e49273e3-af4a-4483-9005-5ca75550ceb1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n"
     ]
    }
   ],
   "source": [
    "new_numberlist=numberlist+[7,8,9,10]\n",
    "print(new_numberlist)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "e00c52bd-e7af-43f7-87ab-b242b34f7e17",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "10"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Length\n",
    "len(new_numberlist)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "c0cedc7b-25a9-430d-baa3-f4f2218ae4bd",
   "metadata": {},
   "outputs": [],
   "source": [
    "# something's wrong here\n",
    "cubes=[1,8,27,65,125] # 65 is wrong value "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "e2935036-e03d-4e10-b9b2-bacdc55594e8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "64"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "4**3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "9964038e-2a1e-47a6-aca0-1bc51a77580d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "64\n"
     ]
    }
   ],
   "source": [
    "cubes[3]=64 # replace the wrong value\n",
    "print(cubes[3])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "a457409e-70f7-4efa-84c2-3d2ae6f7dced",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1, 8, 27, 64, 125]\n"
     ]
    }
   ],
   "source": [
    "print(cubes)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5f5a8ce2-9d3f-4833-ba88-1543d28006f9",
   "metadata": {},
   "outputs": [],
   "source": [
    "You can also add new items at the end of the list, by using the list.append() method (we will see more about methods later):"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "65bc3e16-747e-46db-84d4-622c614b54af",
   "metadata": {},
   "outputs": [],
   "source": [
    "cubes.append(216)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "080f17ee-96ed-444c-b9bb-3e50e41b84a8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1, 8, 27, 64, 125, 216]"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cubes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "ad601041-81fc-4840-a6ae-36eeb0e12a0d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1, 8, 27, 64, 125, 216, 343, 343]\n"
     ]
    }
   ],
   "source": [
    "cubes.append(7**3)\n",
    "print(cubes)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "eba3bd71-22f3-444c-8b28-2a44c1259f0e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1, 8, 27, 64, 125, 216, 343, 343, 512]\n"
     ]
    }
   ],
   "source": [
    "cubes.append(8**3)\n",
    "print(cubes)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "1cb4130d-2a2d-4bc7-89a7-49287eedd8c2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1, 8, 27, 64, 125, 216, 343, 343, 512, 729]\n"
     ]
    }
   ],
   "source": [
    "cubes.append(9**3)\n",
    "print(cubes)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "b9ce8ea1-993f-4656-9e2f-bb132e3fd5b4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1, 8, 27, 64, 125, 216, 343, 343, 512, 729, 1000]\n"
     ]
    }
   ],
   "source": [
    "cubes.append(10**3) #This is a cube\n",
    "print(cubes)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "f2061bdf-20f0-4b7f-8a1d-11cb2a40eedf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1, 8, 27, 64, 125, 216, 343, 343, 512, 729, 1000, 'this is cubes numbers']"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cubes.append(\"this is cubes numbers\")\n",
    "cubes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "7f4fc8d5-0033-4a53-9a2f-5044d20a8a60",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['a', 'b', 'c', 'd', 'e', 'f', 'g']"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g']\n",
    "letters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "ef5bf94a-9462-4605-95bd-66f7d1c797dd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['a', 'b', 'C', 'D', 'E', 'f', 'g']"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# replace some values\n",
    "letters[2:5]=[\"C\",\"D\",\"E\"]\n",
    "letters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "a0fa9ee8-c52b-4efd-9fa6-1efa1e3a1d93",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['a', 'b', 'f', 'g']"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# now remove them\n",
    "letters[2:5] = []\n",
    "letters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "bf0e66d6-45ff-4013-86d4-7bb0692ae837",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# clear the list by replacing all the elements with an empty list\n",
    "letters[:] = []\n",
    "letters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1ccdd9a0-0c0a-4295-bfd3-bbdaccd11a4f",
   "metadata": {},
   "outputs": [],
   "source": [
    "The built-in function len() also applies to lists:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6969a4a8-6153-4a24-9803-48f00b2408b5",
   "metadata": {},
   "outputs": [],
   "source": [
    "len(let"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
