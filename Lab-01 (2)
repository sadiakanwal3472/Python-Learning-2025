{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "de1de839-f5ec-48b2-a65e-b3defb49e007",
   "metadata": {},
   "source": [
    "# Introduction of python"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "00f7dbbc-c4e0-4b9b-8edb-6a4b2517346b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hellow,world\n"
     ]
    }
   ],
   "source": [
    "# code for 1. \"Hello, world\"\n",
    "print(\"Hellow,world\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "1a6c1302-a31d-4422-b14f-7ec0668d6951",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hellow, world\n"
     ]
    }
   ],
   "source": [
    "# code for 2. remove the closing quotation \n",
    "print(\"Hellow, world\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "e91b3ff3-186f-48b2-8436-e2ac32485462",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'Hello' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[3], line 2\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;66;03m# code for 3. remove both quotation \u001b[39;00m\n\u001b[1;32m----> 2\u001b[0m \u001b[38;5;28mprint\u001b[39m(Hello,world)\n",
      "\u001b[1;31mNameError\u001b[0m: name 'Hello' is not defined"
     ]
    }
   ],
   "source": [
    "# code for 3. remove both quotation \n",
    "print(Hello,world)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "859816bb-0e94-4d5c-9e9f-0458a2b496fd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enterthe numbers of rows: 4\n"
     ]
    }
   ],
   "source": [
    "# code for 4. triangler shape of star's\n",
    "rows=int(input(\"Enterthe numbers of rows:\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "ffab168d-bec2-4d8b-bae2-3da965e58368",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "*\n",
      "\n",
      "**\n",
      "\n",
      "***\n",
      "\n",
      "****\n",
      "\n"
     ]
    }
   ],
   "source": [
    "for i in range (rows):\n",
    "    for j in range(i+1):\n",
    "        print(\"*\",end=\"\")    \n",
    "    print (\"\\n\") # Each output in next line "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "99d8229f-caf6-405b-b9d8-6ae7605f05dd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter the numbers of rows 5\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\n",
      "\n",
      "12\n",
      "\n",
      "123\n",
      "\n",
      "1234\n",
      "\n",
      "12345\n",
      "\n"
     ]
    }
   ],
   "source": [
    "rows=int(input(\"enter the numbers of rows\"))\n",
    "for i in range(rows):\n",
    "    for j in range(i+1):\n",
    "        print(j+1,end=\"\")\n",
    "    print(\"\\n\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "93715682-a3c2-4004-b4a0-ab956e7b1d87",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
